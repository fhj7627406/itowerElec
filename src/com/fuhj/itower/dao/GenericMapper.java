package com.fuhj.itower.dao;

import java.io.Serializable;
import java.util.List;
import java.util.Map;

import org.apache.ibatis.annotations.Param;
import org.apache.ibatis.session.RowBounds;

/**
 * 通用的Mapper 调用String sqlId的方法，其方法名必须包含"ByCustom"， 这是写死在修改后的MyBatis代码中的
 * 
 * 有部分方法有<M>声明而没用到类上面的<T>是因为其可能放回其他类型的对象，如Integer, Long之类 这是考虑到GenericDao中有
 * selectListInteger之类的方法而做的修改
 * 
 * @param <T>
 */
public interface GenericMapper<T> {
	// ---- Generated by MyBatis-Generator with a little bit modification
	<C extends Criteria> int countByExample(Example<C> example);

	<C extends Criteria> int deleteByExample(Example<C> example);

	<K extends Serializable> int deleteByPrimaryKey(K primaryKey);

	int insert(T model);

	int insertSelective(T model);

	<C extends Criteria> List<T> selectByExample(Example<C> example);

	<K extends Serializable> T selectByPrimaryKey(K primaryKey);

	<C extends Criteria> int updateByExampleSelective(@Param("record") T model, @Param("example") Example<C> example);

	<C extends Criteria> int updateByExample(@Param("record") T model, @Param("example") Example<C> example);

	int updateByPrimaryKeySelective(T model);

	int updateByPrimaryKey(T model);

	// ----added by liaoyw
	/**
	 * 通过example来修改某一些记录的某个字段，如
	 * 
	 * public void modifyLoginIp(Users user, String loginIp) throws
	 * ServiceException { List<DbField> fields = new ArrayList<DbField>();
	 * fields.add(new DbField(DbConstant.USERS_LAST_LOGIN_IP, loginIp));
	 * //fields.add(new DbField("BEGIN_TIME", new Date()));
	 * Example<UsersCriteria> example = Example.getExample(UsersCriteria.class);
	 * example.createCriteria().andUserIdEqualTo(user.getUserId());
	 * userMapper.updateFieldsByExample(fields, example); }
	 * 用example来作为update的条件，似乎有点笨重(啰嗦)
	 */
	<C extends Criteria> int updateFieldsByExample(@Param("fields") List<DbField> fields, @Param("example") Example<C> example);

	// ---- adapted from the 'logistics' project
	int insertByCustom(String sqlId, Map<String, Object> paraMap);

	int countByCustom(String sqlId, Map<String, Object> paraMap);

	<C extends Criteria> int countByCustom(String sqlId, Example<C> example);

	int deleteByCustom(String sqlId, Map<String, Object> paraMap);

	/**
	 * 分页用
	 * 
	 * @param rowBounds
	 *            限定分页的真实偏移和条数，可以用 rowBounds = new RowBounds(int skipResults,
	 *            int maxResults); 详情请查看mybatis api
	 * @return
	 */
	<C extends Criteria> List<T> selectByExample(Example<C> example, RowBounds rowBounds);

	<M> List<M> selectByCustom(String sqlId, Map<String, Object> paraMap);

	<M> List<M> selectByCustom(String sqlId, Map<String, Object> paraMap, RowBounds rowBounds);

	<M, C extends Criteria> List<M> selectByCustom(String sqlId, Example<C> example);

	<M, C extends Criteria> List<M> selectByCustom(String sqlId, Example<C> example, RowBounds rowBounds);

	<M> M selectModelByCustom(String sqlId, Map<String, Object> paraMap);

	<M, C extends Criteria> M selectModelByExample(Example<C> example);

	int updateByCustom(String sqlId, Map<String, Object> paramMap);
}
