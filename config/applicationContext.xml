<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:jdbc="http://www.springframework.org/schema/jdbc"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-3.0.xsd
     http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-3.0.xsd
     http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
     http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">

	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="location" value="classpath:jdbc.properties" />
	</bean>

	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"
		destroy-method="close">
		<property name="driverClassName" value="${jdbc.driverClass}" />
		<property name="url" value="${jdbc.jdbcUrl}" />
		<property name="username" value="${jdbc.user}" />
		<property name="password" value="${jdbc.password}" />
		<property name="defaultAutoCommit" value="false" />
		<property name="initialSize" value="5" />
		<property name="maxActive" value="60" />
		<property name="maxIdle" value="10" />
		<property name="maxWait" value="30000" />
		<property name="validationQuery" value="select 1" />
		<property name="testOnBorrow" value="true" />
		<property name="testOnReturn" value="false" />
		<property name="testWhileIdle" value="false" />
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- define the SqlSessionFactory, notice that configLocation is not needed 
		when you use MapperFactoryBean -->
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="configLocation" value="classpath:mybatis-config.xml" />
	</bean>
	
	<!-- the transactional advice (what 'happens'; see the <aop:advisor/> bean 
		below) -->
	<tx:advice id="transactionAdvice" transaction-manager="transactionManager">
		<!-- the transactional semantics... -->
		<tx:attributes>
			<!-- all methods starting with 'get' are read-only -->
			<tx:method name="get*" propagation="REQUIRED" timeout="60"
				read-only="true" />
			<tx:method name="find*" propagation="REQUIRED" timeout="60"
				read-only="true" />
			<tx:method name="query*" propagation="REQUIRED" timeout="60"
				read-only="true" />
			<tx:method name="insert*" propagation="REQUIRED" timeout="60"
				read-only="false" />
			<tx:method name="update*" propagation="REQUIRED" timeout="60"
				read-only="false" />
			<tx:method name="delete*" propagation="REQUIRED" timeout="60"
				read-only="false" />
			<tx:method name="add*" propagation="REQUIRED" timeout="60"
				read-only="false" />
			<tx:method name="modify*" propagation="REQUIRED" timeout="60"
				read-only="false" />
			<tx:method name="remove*" propagation="REQUIRED" timeout="60"
				read-only="false" />
			<!-- other methods use the default transaction settings (see below) -->
			<tx:method name="*" propagation="REQUIRED" timeout="60"
				read-only="true" />
		</tx:attributes>
	</tx:advice>
	<aop:config>
		<aop:pointcut id="serviceOperation"
			expression="execution(* com.fuhj.itower.service.*Service.*(..))" />
		<aop:advisor advice-ref="transactionAdvice" pointcut-ref="serviceOperation" />
	</aop:config>
<!-- 	<bean id="serviceLogAdvice" class="com.fuhj.log.ServiceLogAdvice" /> -->
<!-- 	<aop:config> -->
<!-- 		<aop:pointcut id="serviceLog" -->
<!-- 			expression="execution(* com.fuhj.itower.service.*Service.*(..))" /> -->
<!-- 		<aop:advisor advice-ref="serviceLogAdvice" pointcut-ref="serviceLog" /> -->
<!-- 	</aop:config> -->
	<import resource="applicationContext-itower.xml" />
</beans>